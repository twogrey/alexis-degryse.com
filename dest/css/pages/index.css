@charset "UTF-8";
/** -----------------------------------------------------------
 *
 * Combination of all files that do not generate CSS.
 * Used for styles files in scss/pages/
 * 
 */
/** --------------------------------------------
 * 
 * Enable/disable imports
 * 
 -------------------------------------------- */
/**
 * Form
 */
/**
 * HTML Elements
 */
/**
 * Objects
 */
/**
 * Components
 */
/**
 * Patterns
 */
/**
 * Utilities
 */
/** --------------------------------------------
 * 
 * Grid
 * 
 -------------------------------------------- */
/**
 * Generic
 */
/**
 * Breakpoints
 */
/** --------------------------------------------
 * 
 *  /!\ Use it only for pages/ scss files
 * 
 -------------------------------------------- */
/** --------------------------------------------
 * 
 *  Fluid typo
 * 
 -------------------------------------------- */
/*
	Improved screen reader only CSS class
	@author Gaël Poupard
		@note Based on Yahoo!'s technique
		@author Thierry Koblentz
		@see https://developer.yahoo.com/blogs/ydn/clip-hidden-content-better-accessibility-53456.html
	* 1.
		@note `clip` is deprecated but works everywhere
		@see https://developer.mozilla.org/en-US/docs/Web/CSS/clip
	* 2.
		@note `clip-path` is the future-proof version, but not very well supported yet
		@see https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path
		@see http://caniuse.com/#search=clip-path
		@author Yvain Liechti
		@see https://twitter.com/ryuran78/status/778943389819604992
	* 3.
		@note preventing text to be condensed
		author J. Renée Beach
		@see https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
		@note Drupal 8 goes with word-wrap: normal instead
		@see https://www.drupal.org/node/2045151
		@see http://cgit.drupalcode.org/drupal/commit/?id=5b847ea
	* 4.
		@note !important is important
		@note Obviously you wanna hide something
		@author Harry Roberts
		@see https://csswizardry.com/2016/05/the-importance-of-important/
*/
@media screen and (min-width: 48rem) {
  html {
    background-color: var(--index-b-c);
  }
}

body {
  --bg-pattern: rgb(252, 252, 252);
  background-color: #fff;
  background-image: linear-gradient(var(--bg-pattern) 6px, transparent 0), linear-gradient(90deg, var(--bg-pattern) 6px, transparent 0), linear-gradient(var(--bg-pattern) 2px, transparent 0), linear-gradient(90deg, var(--bg-pattern) 2px, rgba(0, 0, 0, 0) 0);
  background-size: 100px 100px, 100px 100px, 20px 20px, 20px 20px;
}

/** -----------------------------------------------------------
 *
 * Inverted corner radius (medium res only)
 *
 */
@media screen and (min-width: 48rem) {
  .logo {
    border-radius: 0 0 var(--index-r) var(--index-r);
    background-color: var(--index-b-c);
  }
  .header,
  .logo,
  section:first-of-type {
    position: relative;
  }
  .header::before, .header::after,
  .logo::before,
  .logo::after,
  section:first-of-type::before,
  section:first-of-type::after {
    content: "";
    position: absolute;
    width: var(--index-r);
    aspect-ratio: 1;
    background-color: var(--index-b-c);
    mask: radial-gradient(var(--index-r) at var(--dir), rgba(0, 0, 0, 0) 100%, #000);
  }
  .header {
    border-color: var(--index-b-c);
  }
  .header::before, .header::after {
    top: 0;
  }
  .header::before {
    --dir: bottom right;
    left: 0;
  }
  .header::after {
    --dir: bottom left;
    right: 0;
  }
  .logo::before, .logo::after {
    top: 0;
  }
  .logo::before {
    --dir: bottom left;
    right: 100%;
  }
  .logo::after {
    --dir: bottom right;
    left: 100%;
  }
  section:first-of-type {
    border: var(--index-b);
    border-color: var(--index-b-c);
    border-top: 0;
  }
  section:first-of-type::before, section:first-of-type::after {
    bottom: 0;
  }
  section:first-of-type::before {
    --dir: top right;
    left: 0;
  }
  section:first-of-type::after {
    --dir: top left;
    right: 0;
  }
}
section:nth-of-type(2) {
  background-color: var(--index-b-c);
}

/** -----------------------------------------------------------
 *
 * Pop-out photo
 *
 */
.photo {
  --s: 0.5rem;
  position: relative;
  max-width: min(75vw, 20rem);
  margin-inline: auto;
  clip-path: inset(calc(0% - var(--s)) 0% 0% 0% round 0% 0% 50rem 50rem);
}
.photo::before {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  border-radius: 50%;
  background-color: var(--color-lightgrey);
  aspect-ratio: 1;
}
.photo img {
  --c: var(--color-primary-light);
  width: 75%;
  margin-inline: auto;
  filter: drop-shadow(calc(var(--s) * -1) calc(var(--s) * -0.5) var(--c)) drop-shadow(var(--s) calc(var(--s) * -0.5) var(--c)) drop-shadow(0 var(--s) var(--c));
}

/*# sourceMappingURL=index.css.map */