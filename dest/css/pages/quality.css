@charset "UTF-8";
/** -----------------------------------------------------------
 *
 * Combination of all files that do not generate CSS.
 * Used for styles files in scss/pages/
 * 
 */
/** --------------------------------------------
 * 
 * Grid
 * 
 -------------------------------------------- */
/**
 * Generic
 */
/**
 * Breakpoints
 */
/** --------------------------------------------
 * 
 *  /!\ Use it only for pages/ scss files
 * 
 -------------------------------------------- */
/** --------------------------------------------
 * 
 *  Fluid typo
 * 
 -------------------------------------------- */
/*
	Improved screen reader only CSS class
	@author Gaël Poupard
		@note Based on Yahoo!'s technique
		@author Thierry Koblentz
		@see https://developer.yahoo.com/blogs/ydn/clip-hidden-content-better-accessibility-53456.html
	* 1.
		@note `clip` is deprecated but works everywhere
		@see https://developer.mozilla.org/en-US/docs/Web/CSS/clip
	* 2.
		@note `clip-path` is the future-proof version, but not very well supported yet
		@see https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path
		@see http://caniuse.com/#search=clip-path
		@author Yvain Liechti
		@see https://twitter.com/ryuran78/status/778943389819604992
	* 3.
		@note preventing text to be condensed
		author J. Renée Beach
		@see https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
		@note Drupal 8 goes with word-wrap: normal instead
		@see https://www.drupal.org/node/2045151
		@see http://cgit.drupalcode.org/drupal/commit/?id=5b847ea
	* 4.
		@note !important is important
		@note Obviously you wanna hide something
		@author Harry Roberts
		@see https://csswizardry.com/2016/05/the-importance-of-important/
*/
@media screen and (min-width: 75rem) {
  .pillars {
    --item-h: 18vh;
    --brick-h: 5.5125rem;
    padding-bottom: calc(var(--brick-h) * 1.25);
  }
}
.pillars .item {
  padding-bottom: var(--sp-2);
}
@media screen and (min-width: 75rem) {
  .pillars .item {
    min-height: var(--item-h);
  }
}

@media screen and (min-width: 75rem) {
  .bricks {
    display: flex;
    align-items: flex-start;
    justify-content: center;
  }
  .bricks img {
    width: 6.25rem;
    height: var(--brick-h);
  }
}
@media screen and (min-width: 75rem) and (prefers-reduced-motion: no-preference) {
  .bricks img {
    position: sticky;
    top: 50%;
  }
}
@media screen and (min-width: 75rem) {
  .bricks img:nth-of-type(1) {
    margin-top: calc(var(--item-h) * 3 + var(--brick-h) * 0.7);
    translate: 90% -70%;
  }
  .bricks img:nth-of-type(2) {
    margin-top: calc(var(--item-h) + var(--brick-h) * 0.35);
    translate: 45% -35%;
  }
  .bricks img:nth-of-type(3) {
    translate: 0;
  }
  .bricks img:nth-of-type(4) {
    margin-top: calc(var(--item-h) * 2 - var(--brick-h) * 0.35);
    translate: -45% 35%;
  }
  .bricks img:nth-of-type(5) {
    margin-top: calc(var(--item-h) * 4 - var(--brick-h) * 0.7);
    translate: -90% 70%;
  }
  .bricks .bricks {
    position: absolute;
    bottom: 0;
    left: calc(50% + var(--brick-h) / 4);
    translate: -50% 20%;
  }
  .bricks .bricks::before {
    content: "";
    position: absolute;
    inset: calc(var(--brick-h) * -1) -50%;
    background: radial-gradient(transparent, white 80%), repeating-linear-gradient(150deg, var(--color-grey), var(--color-grey) 2px, transparent 1px, transparent 40px), repeating-linear-gradient(30deg, var(--color-grey), var(--color-grey) 1px, transparent 2px, transparent 40px);
    background-size: auto, 81px 46px;
  }
  .bricks .bricks img {
    margin-top: 0;
  }
  .bricks .bricks img:nth-child(6) {
    translate: -135% 105%;
  }
}

/*# sourceMappingURL=quality.css.map */