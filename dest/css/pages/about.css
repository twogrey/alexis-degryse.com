@charset "UTF-8";
/** -----------------------------------------------------------
 *
 * Combination of all files that do not generate CSS.
 * Used for styles files in scss/pages/
 * 
 */
/** --------------------------------------------
 * 
 * Enable/disable imports
 * 
 -------------------------------------------- */
/**
 * Form
 */
/**
 * HTML Elements
 */
/**
 * Objects
 */
/**
 * Components
 */
/**
 * Patterns
 */
/**
 * Utilities
 */
/** --------------------------------------------
 * 
 * Grid
 * 
 -------------------------------------------- */
/**
 * Generic
 */
/**
 * Breakpoints
 */
/** --------------------------------------------
 * 
 *  /!\ Use it only for pages/ scss files
 * 
 -------------------------------------------- */
/** --------------------------------------------
 * 
 *  Fluid typo
 * 
 -------------------------------------------- */
/*
	Improved screen reader only CSS class
	@author Gaël Poupard
		@note Based on Yahoo!'s technique
		@author Thierry Koblentz
		@see https://developer.yahoo.com/blogs/ydn/clip-hidden-content-better-accessibility-53456.html
	* 1.
		@note `clip` is deprecated but works everywhere
		@see https://developer.mozilla.org/en-US/docs/Web/CSS/clip
	* 2.
		@note `clip-path` is the future-proof version, but not very well supported yet
		@see https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path
		@see http://caniuse.com/#search=clip-path
		@author Yvain Liechti
		@see https://twitter.com/ryuran78/status/778943389819604992
	* 3.
		@note preventing text to be condensed
		author J. Renée Beach
		@see https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
		@note Drupal 8 goes with word-wrap: normal instead
		@see https://www.drupal.org/node/2045151
		@see http://cgit.drupalcode.org/drupal/commit/?id=5b847ea
	* 4.
		@note !important is important
		@note Obviously you wanna hide something
		@author Harry Roberts
		@see https://csswizardry.com/2016/05/the-importance-of-important/
*/
@media screen and (min-width: 75rem) {
  .presentation {
    position: relative;
    overflow-x: clip;
    overflow-y: visible;
  }
  .presentation::before, .presentation::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 0;
    width: 50%;
    border-radius: 50%;
    background: var(--color-primary-lightest);
    opacity: 0.2;
    aspect-ratio: 1/1.5;
    translate: -75% -50%;
  }
  .presentation::after {
    right: 0;
    left: auto;
    translate: 75% -50%;
  }
}

.list ol,
.list ul {
  list-style: none;
}
@media screen and (min-width: 36rem) {
  .list ol,
  .list ul {
    display: grid;
    column-gap: var(--sp-2);
    grid-template-columns: auto 1fr;
  }
}
.list li {
  grid-column: span 2;
  padding-block: var(--sp-2);
  border-bottom: 0.125rem dotted var(--color-lightgrey);
}
@media screen and (min-width: 36rem) {
  .list li {
    display: grid;
    row-gap: var(--sp-1-2);
    grid-template-columns: subgrid;
    align-items: baseline;
  }
}
.list li:first-of-type {
  padding-top: var(--sp-1-2);
}
@media screen and (min-width: 36rem) {
  .list li:first-of-type {
    padding-top: 0;
  }
}
.list li > :first-child {
  display: flex;
  gap: var(--sp-1-2);
  align-items: flex-end;
  margin-bottom: var(--sp-1-2);
}
@media screen and (min-width: 36rem) {
  .list li > :first-child {
    flex-direction: column;
    margin-bottom: 0;
  }
}
.list li > :last-child {
  align-self: center;
}
.list .tag {
  justify-self: end;
  padding: var(--sp-1-4) var(--sp-1-2);
  border-radius: var(--radius);
  font-family: "Merriweather", Arial, sans-serif;
  font-size: 80%;
  font-weight: 700;
  letter-spacing: 0.05ch;
  background-color: var(--color-secondary-lightest);
}
.list .tag:nth-child(2) {
  background-color: var(--color-lightgrey);
}

/*# sourceMappingURL=about.css.map */